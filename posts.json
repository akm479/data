[
    {
        "id": "building-finite-state-machines-with-python-coroutines",
        "title": "Building Finite State Machines with Python Coroutines",
        "description": "The most intuitive way of building and implementing Finite State Machines is by using Python Coroutines and in this article, we find how and why.",
        "cover": "https://user-images.githubusercontent.com/4745789/79685663-1c321a80-8258-11ea-802f-9bd07ded28fc.png",
        "gif": "https://media.giphy.com/media/KhdQ2Ia3FJuKs/giphy.gif",
        "authors": ["arpit_bhayani"],
        "topics": ["python"],
        "published_time": "2020-04-19T00:00:00.000Z"
    },
    {
        "id": "s.o.l.i.d-principles",
        "title": "S.O.L.I.D Principles",
        "description": "SOLID is a set of design principles in object-oriented software development; and when applied properly makes your code more extendable, logical and easier to read.",
        "cover": "https://user-images.githubusercontent.com/4745789/79238091-98111900-7e8c-11ea-9627-b289d8b590a6.png",
        "gif": "https://media.giphy.com/media/2Ur7rKKSLIvpwdc2lT/giphy.gif",
        "authors": ["piyush27"],
        "topics": ["software-engineering"],
        "published_time": "2020-04-14T00:00:00.000Z"
    },
    {
        "id": "solving-an-age-old-problem-using-bayesian-average",
        "title": "Solving an age-old problem using Bayesian Average",
        "description": "Ranking a list of movies, products, books or even restaurants is tricky and in this article, we find what works for such a rating system and the math behind it.",
        "cover": "https://user-images.githubusercontent.com/4745789/79074736-b26fb900-7d0b-11ea-9586-0ef13662eab9.png",
        "gif": "https://media.giphy.com/media/dJ4vNQ7r72pb4nDhN5/giphy.gif",
        "authors": ["arpit_bhayani"],
        "topics": ["statistics"],
        "published_time": "2020-04-12T00:00:00.000Z"
    },
    {
        "id": "sliding-window-based-rate-limiter",
        "title": "Sliding window based Rate Limiter",
        "description": "A rate limiter is used to control the rate of traffic sent or received on the network and in this article we dive deep and design a sliding window based rate limiter.",
        "cover": "https://user-images.githubusercontent.com/4745789/78481566-79f83a00-7763-11ea-8c98-ca7384d8ccfe.png",
        "gif": "https://media.giphy.com/media/5YuhLwDgrgtRVwI7OY/giphy.gif",
        "authors": ["arpit_bhayani"],
        "topics": ["system-design"],
        "published_time": "2020-04-05T00:00:00.000Z"
    },
    {
        "id": "understanding-inverse-document-frequency",
        "title": "Understanding Inverse Document Frequency",
        "description": "TF-IDF is extensively used in search engines and in various document classification and clustering techniques. Instead of taking the formula by the word, we take a detour and dive deep into the better half of it and find its connection with Probability, the role it plays in document relevance and the intuition behind it.",
        "cover": "https://user-images.githubusercontent.com/4745789/77845445-a42e8280-71cc-11ea-94f0-ef3c792fa440.png",
        "gif": "https://media.giphy.com/media/3ornjWIRSzXEw61KH6/giphy.gif",
        "authors": ["arpit_bhayani"],
        "topics": ["data-mining"],
        "published_time": "2020-03-06T00:00:00.000Z"
    },
    {
        "id": "pseudorandom-numbers-using-cellular-automata-rule-30",
        "title": "Pseudorandom numbers using Cellular Automata - Rule 30",
        "description": "Generating pseudorandom numbers is an interesting problem in Computer Science. In this article, we dive deep into an algorithm for generating pseudorandom numbers using Rule 30 of Cellular Automaton.",
        "cover": "https://user-images.githubusercontent.com/4745789/77845469-d5a74e00-71cc-11ea-80e3-aae6b02d54e0.png",
        "gif": "https://media.giphy.com/media/26uflDxU6cEhrhmUg/giphy.gif",
        "authors": ["arpit_bhayani"],
        "topics": ["algorithms"],
        "published_time": "2020-02-14T00:00:00.000Z"
    },
    {
        "id": "implemeting-function-overloading-in-python",
        "title": "Implemeting function overloading in Python",
        "description": "Python natively does not support function overloading - having multiple functions with the same name. Today we see how we can implement and add this functionality to Python by using common language constructs like decorators and dictionaries.",
        "cover": "https://user-images.githubusercontent.com/4745789/80238146-8b09dc00-867b-11ea-8056-f4bdf448b2b5.png",
        "gif": "https://media.giphy.com/media/WtCHRSPCuqS8E/giphy.gif",
        "authors": ["arpit_bhayani"],
        "topics": ["python"],
        "published_time": "2020-02-07T00:00:00.000Z"
    },
    {
        "id": "isolation-forest-algorithm-for-anomaly-detection",
        "title": "Isolation Forest algorithm for anomaly detection",
        "description": "Anomaly detection is an age-old problem and in this article, we dive deep into an unsupervised algorithm, Isolation Forest, that beautifully exploits the characteristics of anomalies. Instead of profiling normal points and labeling others as anomalies, the algorithm is actually is tuned to detect anomalies.",
        "cover": "https://user-images.githubusercontent.com/4745789/77845518-2159f780-71cd-11ea-9b0e-57cd451da3b8.png",
        "authors": ["arpit_bhayani"],
        "gif": "https://media.giphy.com/media/xGdvlOVSWaDvi/giphy.gif",
        "topics": ["algorithms"],
        "published_time": "2020-01-28T00:00:00.000Z"
    },
    {
        "id": "everything-that-you-need-to-know-about-image-steganography",
        "title": "Everything that you need to know about Image Steganography",
        "description": "Steganography has been around since at least 440 BCE but with the rise of computers, the techniques have evolved to handle digital data. In this article, we see the science behind image steganography, how it exploits various properties of images to hide secrets and walkthrough a few techniques in detail.",
        "cover": "https://user-images.githubusercontent.com/4745789/77845538-40588980-71cd-11ea-856e-f544ca2ec9ec.png",
        "gif": "https://media.giphy.com/media/V1NxC1YoNEHBe/giphy.gif",
        "authors": ["arpit_bhayani"],
        "topics": ["steganography"],
        "published_time": "2020-01-17T00:00:00.000Z"
    },
    {
        "id": "how-python-implements-super-long-integers",
        "title": "How python implements super long integers?",
        "description": "Python must be doing something beautiful internally to support super long integers and today we find out what's under the hood. The article goes in-depth to explain design, storage, and operations on super long integers as implemented by Python.",
        "cover": "https://user-images.githubusercontent.com/4745789/77845551-5d8d5800-71cd-11ea-8ab0-cd4b0c3239cb.png",
        "gif": "https://media.giphy.com/media/SKGo6OYe24EBG/giphy.gif",
        "authors": ["arpit_bhayani"],
        "topics": ["python"],
        "published_time": "2020-01-10T00:00:00.000Z"
    }
]