[
    {
        "id": "s.o.l.i.d-principles",
        "title": "S.O.L.I.D Principles",
        "description": "SOLID is a set of design principles in object-oriented software development; and when applied properly makes your code more extendable, logical and easier to read.",
        "cover": "https://user-images.githubusercontent.com/4745789/79238091-98111900-7e8c-11ea-9627-b289d8b590a6.png",
        "gif": "https://media.giphy.com/media/2Ur7rKKSLIvpwdc2lT/giphy.gif",
        "authors": [
            {
                "id": "piyush27",
                "twitter_handle": "OnlyMaheswari",
                "name": "Piyush Maheswari",
                "bio": "Android Developer | Speaker | Stand up Comedian",
                "profile_img": "https://user-images.githubusercontent.com/4745789/79239491-3fdb1680-7e8e-11ea-890f-97279e57601f.jpg",
                "cover": "https://user-images.githubusercontent.com/4745789/79241567-d4df0f00-7e90-11ea-82f1-04a1ac0abede.png",
                "substack": ""
            }
        ],
        "topics": [
            {
                "id": "software-engineering",
                "name": "Software Engineering",
                "parent": ""
            }
        ],
        "published_time": "2020-04-14T00:00:00.000Z"
    },
    {
        "id": "solving-an-age-old-problem-using-bayesian-average",
        "title": "Solving an age-old problem using Bayesian Average",
        "description": "Ranking a list of movies, products, books or even restaurants is tricky and in this article, we find what works for such a rating system and the math behind it.",
        "cover": "https://user-images.githubusercontent.com/4745789/79074736-b26fb900-7d0b-11ea-9586-0ef13662eab9.png",
        "gif": "https://media.giphy.com/media/dJ4vNQ7r72pb4nDhN5/giphy.gif",
        "authors": [
            {
                "id": "arpit_bhayani",
                "twitter_handle": "arpit_bhayani",
                "name": "Arpit Bhayani",
                "bio": "Backend @Unacademy • Data @Amazon • Platform @Practo | Writes about Language internals and Math in Computer Science",
                "profile_img": "https://user-images.githubusercontent.com/4745789/77757123-a2db4980-7056-11ea-82d7-ce023364bf21.jpg",
                "cover": "https://user-images.githubusercontent.com/4745789/77845426-819c6980-71cc-11ea-9cbf-2dc1e57371e8.png",
                "substack": "arpit"
            }
        ],
        "topics": [
            {
                "id": "statistics",
                "name": "Statistics",
                "parent": ""
            }
        ],
        "published_time": "2020-04-12T00:00:00.000Z"
    },
    {
        "id": "sliding-window-based-rate-limiter",
        "title": "Sliding window based Rate Limiter",
        "description": "A rate limiter is used to control the rate of traffic sent or received on the network and in this article we dive deep and design a sliding window based rate limiter.",
        "cover": "https://user-images.githubusercontent.com/4745789/78481566-79f83a00-7763-11ea-8c98-ca7384d8ccfe.png",
        "gif": "https://media.giphy.com/media/5YuhLwDgrgtRVwI7OY/giphy.gif",
        "authors": [
            {
                "id": "arpit_bhayani",
                "twitter_handle": "arpit_bhayani",
                "name": "Arpit Bhayani",
                "bio": "Backend @Unacademy • Data @Amazon • Platform @Practo | Writes about Language internals and Math in Computer Science",
                "profile_img": "https://user-images.githubusercontent.com/4745789/77757123-a2db4980-7056-11ea-82d7-ce023364bf21.jpg",
                "cover": "https://user-images.githubusercontent.com/4745789/77845426-819c6980-71cc-11ea-9cbf-2dc1e57371e8.png",
                "substack": "arpit"
            }
        ],
        "topics": [
            {
                "id": "system-design",
                "name": "System Design",
                "parent": ""
            }
        ],
        "published_time": "2020-04-05T00:00:00.000Z"
    },
    {
        "id": "understanding-inverse-document-frequency",
        "title": "Understanding Inverse Document Frequency",
        "description": "TF-IDF is extensively used in search engines and in various document classification and clustering techniques. Instead of taking the formula by the word, we take a detour and dive deep into the better half of it and find its connection with Probability, the role it plays in document relevance and the intuition behind it.",
        "cover": "https://user-images.githubusercontent.com/4745789/77845445-a42e8280-71cc-11ea-94f0-ef3c792fa440.png",
        "gif": "https://media.giphy.com/media/3ornjWIRSzXEw61KH6/giphy.gif",
        "authors": [
            {
                "id": "arpit_bhayani",
                "twitter_handle": "arpit_bhayani",
                "name": "Arpit Bhayani",
                "bio": "Backend @Unacademy • Data @Amazon • Platform @Practo | Writes about Language internals and Math in Computer Science",
                "profile_img": "https://user-images.githubusercontent.com/4745789/77757123-a2db4980-7056-11ea-82d7-ce023364bf21.jpg",
                "cover": "https://user-images.githubusercontent.com/4745789/77845426-819c6980-71cc-11ea-9cbf-2dc1e57371e8.png",
                "substack": "arpit"
            }
        ],
        "topics": [
            {
                "id": "data-mining",
                "name": "Data Mining",
                "parent": ""
            }
        ],
        "published_time": "2020-03-06T00:00:00.000Z"
    },
    {
        "id": "pseudorandom-numbers-using-cellular-automata-rule-30",
        "title": "Pseudorandom numbers using Cellular Automata - Rule 30",
        "description": "Generating pseudorandom numbers is an interesting problem in Computer Science. In this article, we dive deep into an algorithm for generating pseudorandom numbers using Rule 30 of Cellular Automaton.",
        "cover": "https://user-images.githubusercontent.com/4745789/77845469-d5a74e00-71cc-11ea-80e3-aae6b02d54e0.png",
        "gif": "https://media.giphy.com/media/26uflDxU6cEhrhmUg/giphy.gif",
        "authors": [
            {
                "id": "arpit_bhayani",
                "twitter_handle": "arpit_bhayani",
                "name": "Arpit Bhayani",
                "bio": "Backend @Unacademy • Data @Amazon • Platform @Practo | Writes about Language internals and Math in Computer Science",
                "profile_img": "https://user-images.githubusercontent.com/4745789/77757123-a2db4980-7056-11ea-82d7-ce023364bf21.jpg",
                "cover": "https://user-images.githubusercontent.com/4745789/77845426-819c6980-71cc-11ea-9cbf-2dc1e57371e8.png",
                "substack": "arpit"
            }
        ],
        "topics": [
            {
                "id": "algorithms",
                "name": "Algorithms",
                "parent": ""
            }
        ],
        "published_time": "2020-02-14T00:00:00.000Z"
    },
    {
        "id": "implemeting-function-overloading-in-python",
        "title": "Implemeting function overloading in Python",
        "description": "Python natively does not support function overloading - having multiple functions with the same name. Today we see how we can implement and add this functionality to Python by using common language constructs like decorators and dictionaries.",
        "cover": "https://user-images.githubusercontent.com/4745789/77845505-07201980-71cd-11ea-9d27-44094218741f.png",
        "gif": "https://media.giphy.com/media/WtCHRSPCuqS8E/giphy.gif",
        "authors": [
            {
                "id": "arpit_bhayani",
                "twitter_handle": "arpit_bhayani",
                "name": "Arpit Bhayani",
                "bio": "Backend @Unacademy • Data @Amazon • Platform @Practo | Writes about Language internals and Math in Computer Science",
                "profile_img": "https://user-images.githubusercontent.com/4745789/77757123-a2db4980-7056-11ea-82d7-ce023364bf21.jpg",
                "cover": "https://user-images.githubusercontent.com/4745789/77845426-819c6980-71cc-11ea-9cbf-2dc1e57371e8.png",
                "substack": "arpit"
            }
        ],
        "topics": [
            {
                "id": "python",
                "name": "Python",
                "parent": "languages"
            }
        ],
        "published_time": "2020-02-07T00:00:00.000Z"
    }
]